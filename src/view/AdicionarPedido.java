/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.PedidoDAO;
import dao.ProdpadDAO;
import dao.ProdutoDAO;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import model.Pedido;
import model.Prodpad;
import model.Produto;

/**
 *
 * @author guilherme
 */
public class AdicionarPedido extends javax.swing.JInternalFrame {
    //faz uma list da classe Produto e seleciona a variavel produtosSelecionados.
    private List<Produto> produtosSelecionados;
    
    /**
     * Creates new form AdicionarPedido
     */
    public AdicionarPedido() {
        initComponents();
        //uso o metodod construtor cria uma variavel produtosSelecionados  que recebe um arrayList
        produtosSelecionados = new ArrayList<>();
        carregarProduto();
        //carregarTabela();
        
    }
    
    private void carregarProduto(){
        /* private void carregarCidades(){
        
        List<Cidade> listaCidades = 
                CidadeDAO.getCidades();
        DefaultComboBoxModel model = 
                new DefaultComboBoxModel();
        Cidade fake = new Cidade();
        fake.setId(0);
        fake.setNome("Selecione...");
        model.addElement( fake );
        for (Cidade cid : listaCidades) {
            model.addElement( cid );
        }
        cmbCidade.setModel( model );
        
    }*/
        List<Produto> listaProduto = ProdutoDAO.getProduto();
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        Produto fake = new Produto();
        fake.setNome("Selecione...");
        model.addElement( fake);
        for (Produto pro : listaProduto){
            model.addElement(pro);
        }
        cmbPedido.setModel(model);
       
        
        
        
            
        
    }
    
    private void carregarTabela(){
      
        /*DefaultTableModel model = new DefaultTableModel();
        String[] colunas = {"Codigo","Nome","Tipo","preco"};
        
        
        model.setColumnIdentifiers(colunas);
        
        for(Produto pro:produtosSelecionados){
            
            Object[] linha = { pro.getId(),pro.getNome(),pro.getTipo(),pro.getPreco()};
            model.addRow(linha);
             
                   

                
        
            
        }
        tableProdutosSelecionados.setModel( model );*/
        
        
        
        DefaultTableModel model = new DefaultTableModel();
        String[] colunas = {"Codigo","Nome","Tipo","preco"};
        
        
        model.setColumnIdentifiers(colunas);
        
        for(Produto pro:produtosSelecionados){
            
            Object[] linha = { pro.getId(),pro.getNome(),pro.getTipo(),pro.getPreco()};
            model.addRow(linha);
             
                   

                
        
            
        }
        tableProdutosSelecionados.setModel( model );
        
        
        
       
        
        
    }
    
  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableProdutosSelecionados = new javax.swing.JTable();
        cmbPedido = new javax.swing.JComboBox<>();
        btnAdicionar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Adicionar Pedido");

        tableProdutosSelecionados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableProdutosSelecionados);

        cmbPedido.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPedidoActionPerformed(evt);
            }
        });

        btnAdicionar.setText("+");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSalvar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(cmbPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdicionar)))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionar))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(btnSalvar)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        //if seleciona a barra de pedidos e aceita qualquer coisa diferente de zero para n√£o selecionar o select.
        if(cmbPedido.getSelectedIndex() != 0){
        //de traz para frente(a barra de pedidos usa o object selecionarItem e seleciona a classe produto e adiciona na tabela produtosSelecionados.
        produtosSelecionados.add( (Produto) cmbPedido.getSelectedItem()  );
        //E carrega a funcao carregarTabela();
        carregarTabela();
        }
                
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void cmbPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPedidoActionPerformed
        
        
        
    }//GEN-LAST:event_cmbPedidoActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        Pedido ped = new Pedido();
        
        Calendar hoje = Calendar.getInstance();
        String data = hoje.get(Calendar.YEAR) + "-" + (hoje.get(Calendar.MONTH) +1 ) + "-" + hoje.get(Calendar.DAY_OF_MONTH)   ;
        ped.setData(data);
        
        int idPedido = PedidoDAO.inserir(ped);
        
        for(Produto pro: produtosSelecionados ){
            Prodpad prodpad = new Prodpad();
            prodpad.setCodPedido(idPedido);
            prodpad.setCodProduto(pro.getId());
            prodpad.setPreco(pro.getPreco());
            prodpad.setQtd(1);
            ProdpadDAO.inserir(prodpad);
        }
        
        
//        
//        int p;
//        int m;
//        
//        
//        ped.getId();
//         p = prod.getCodPedido() = ped.getId();
//         m = prod.getCodProduto() = model.getId();
//         
        
        
        
    }//GEN-LAST:event_btnSalvarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<String> cmbPedido;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableProdutosSelecionados;
    // End of variables declaration//GEN-END:variables
}
